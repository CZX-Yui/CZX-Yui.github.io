<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于Hexo框架搭建个人博客网站并部署在GitHub上</title>
    <link href="/2023/04/02/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%9C%A8GitHub%E4%B8%8A/"/>
    <url>/2023/04/02/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%9C%A8GitHub%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<p>摘要：记录第一次搭建个人博客的全过程，学会了简单的网页部署，搭建了一个十分舒服的知识管理系统，Nice！技术栈包括Hexo基本框架，Fluid主题，GitHub.io云端部署等</p><span id="more"></span><hr><blockquote><p>引言：我为什么要开始写博客？</p></blockquote><p>不是所有的程序员都写博客，但是优秀的程序员都有写博客的习惯。因为这一门职业必备两项基本素质：<strong>持续学习</strong>和<strong>开源精神</strong>，写博客的过程正是践行了这两点。坚持每日学习，吸收前沿知识和最新信息，通过写博客的方式进行自我总结和思考，并开源到互联网上供他人参考与交流。此外，在写博客和运营网站的过程中，还能提高自己的语言表达能力、问题理解与解释能力、设计与艺术能力等。总之，每天抽一点时间做做总结，每周再反思归纳归纳，对一个人技术水平的提升是大有裨益的。</p><p>这周末花了两天时间，总算是搭建好了自己的博客系统，趁热打铁赶紧总结一波，作为本站的第一篇文章。我将先复盘搭建博客系统的全部配置细节，再总结日后使用的流水线操作方法。</p><hr><h1 id="一、博客系统配置"><a href="#一、博客系统配置" class="headerlink" title="一、博客系统配置"></a>一、博客系统配置</h1><p>我的需求一开始是想做一个知识汇总用的笔记软件，因为一直用的Notion，非常好用，但是怕毕业了没有学校的邮箱（可以免费用），而购买它的服务又太贵了（每个月5刀），而且总觉得自己的东西放在别人的平台上不太放心，万一哪天公司跑路了东西就都没了，而且人家还是个美国公司（虽然老板是华裔）。因此选择了博客这个平台来做知识管理，将每天的随笔、笔记什么的保留在互联网上，而且公开可见，万一做的好的话还能增加流量出个名什么的hhh（主要还是自己总结用啦）。</p><p>调研了一下现有的搭建博客方案，一种方案是直接用现有平台的（CSDN、博客园、掘金、简书、知乎等等），比较方便，容易被搜索引擎搜到，但是功能较单一，扩展性差，风格固化，最不能忍受的是还有广告牛皮癣！而另一种方案是本地建站再部署到云端，DIY成分更多，但是难度也大，需要对全栈有个基本了解。以后我的目标是用方案二，但是现在初步入门还是先快速搭建出一个Demo较好（劝退警告），因此我选择的方案是介于两者之间的：<strong>本地采用md写作，再用博客生成框架直接转译成网站源码，再通过Github部署到云端。</strong></p><p>三步流程的技术选型：</p><ul><li><p><strong>本地markdown写作</strong>：使用<strong>Typora</strong>，永久购买89元。（看到一句话被激励到，立刻购买了：你愿意花大几百去买游戏，却不愿意花几十块买个好用的生产力工具？）</p></li><li><p><strong>本地建站框架</strong>：其实最佳的建站方法是自己写网站代码，灵活度高，但是对新手不友好。因此这部分选择目前主流的“纯文本md转译为HTML的博客建站框架”，Github官方推荐的是Jekyll框架，尝试了下因为不方便修改风格而且教程较老就放弃了，目前选择的是<strong>Hexo</strong>框架，搭配开源主题插件<strong>Fluid</strong>，美&amp;爽！</p></li><li><p><strong>云端部署</strong>：采用<strong>Github Pages</strong>功能。Github界面美观且功能强大，还提供了免费的网站部署（虽然资源受限，但是做个博客绰绰有余了）。</p></li></ul><p>本地环境：基于Windows11系统，在LEGION2022-R7000笔电上安装，默认已配置好VPN（随时会用）</p><h2 id="1-本地环境配置"><a href="#1-本地环境配置" class="headerlink" title="1. 本地环境配置"></a>1. 本地环境配置</h2><p>本地配置的目标是完成本地建站功能，至于部署到云端再到怎么能成功访问就是Github帮我们做好的事情了。因此需要配置用于本地建站的<strong>Node.js</strong>和用于Github部署的<strong>git</strong>。有了这个基础，再去安装博客转译框架<strong>Hexo</strong>。</p><ol><li>安装<a href="https://nodejs.org/en">Node.js</a></li><li>安装<a href="https://git-scm.com/">Git</a></li><li>安装<a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85">Hexo</a></li></ol><p>安装完成使用-v命令查看版本测试安装是否成功。注意查看Hexo版本必须在安装Hexo的目录下看（我的是MyBlog博客根目录），否则不显示Hexo的版本只显示hexo-cli的版本。</p><blockquote><ul><li><p><a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85">Hexo官方教程（安装）</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1662732">Hexo博客详细教程（一）| 建立本地站点 - 腾讯云开发者社区 </a></p></li></ul></blockquote><h2 id="2-本地建站与项目文件说明"><a href="#2-本地建站与项目文件说明" class="headerlink" title="2. 本地建站与项目文件说明"></a>2. 本地建站与项目文件说明</h2><h3 id="建站流程"><a href="#建站流程" class="headerlink" title="建站流程"></a>建站流程</h3><h4 id="1-初始化站点"><a href="#1-初始化站点" class="headerlink" title="1. 初始化站点"></a>1. 初始化站点</h4><ol><li>第一次建站，选择一个文件夹作为站点根目录，在终端打开，执行以下命令新建文件</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> hexo init &lt;folder&gt;<br><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> &lt;folder&gt;<br><span class="hljs-variable">$</span> npm install<br></code></pre></td></tr></table></figure><ol start="2"><li><p>此时直接运行<code>hexo s</code>即可在本地部署demo网站，启动server，打开本地浏览器链接即可访问</p></li><li><p>之后每一次执行修改，重新生成站点页面时都需要先运行<code>hexo clean</code>清除历史，再运行<code>hexo g</code>生成HTML页面</p></li></ol><blockquote><ul><li><a href="https://hexo.io/zh-cn/docs/setup">Hexo官方教程（建站）</a></li></ul></blockquote><h4 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2. 修改配置文件"></a>2. 修改配置文件</h4><ol><li><p>修改根目录下的_config.yml文件，这是站点全局配置文件。使用vscode打开，参考官方教程进行配置。</p></li><li><p>修改默认模板文件post.md，添加Front-matter字段。（添加标签、分类等便于管理）</p></li></ol><blockquote><ul><li><a href="https://hexo.io/zh-cn/docs/configuration">Hexo官方教程（配置）</a></li><li><a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter | Hexo</a></li></ul></blockquote><h4 id="3-更换主题"><a href="#3-更换主题" class="headerlink" title="3. 更换主题"></a>3. 更换主题</h4><p>默认的主题不好看，下载安装Fluid主题。参考官方文档进行配置。</p><p>我用npm install方法将hexo-theme-fluid安装在node_module库中，并将其中的配置文件复制到根目录下_config.fluid.yml，在这里配置和主题相关的事项。</p><p>主题文件夹里的source和根目录下的source在编译后会合并，因此保存图片优先放在根目录下的source的images文件夹里。</p><blockquote><ul><li><a href="https://hexo.fluid-dev.com/docs/start/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B">开始使用 | Hexo Fluid 用户手册 (fluid-dev.com)</a></li><li><a href="https://hexo.fluid-dev.com/docs/guide/">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a></li></ul></blockquote><h3 id="项目文件组织说明"><a href="#项目文件组织说明" class="headerlink" title="项目文件组织说明"></a>项目文件组织说明</h3><p>项目文件组织如下：大部分都是配置文件，核心放md文档的文件只有source</p><ul><li>.github：git配置文件</li><li>themes：网站主题，类似布局模板。没下载一个主题就会将主题文件夹放在该文件夹里，核心是主题的_config.yml配置文件，里面一般定义页面的标题、链接啥的</li><li>source：存放每个单独博文的md文件、md文件对应的图片文件夹，新建page后还能按category、tag管理（和主题相关，有的主题可能没有）</li><li>node_modules：node.js的lib库</li><li>scaffolds：md文件的模板文件，新建post、page、draft会自动复制里面的模板。模板里只定义了yml头字段，部分自动写好（title、date），其余在写文章时需自行填写。每次新建md文件默认拷贝post.md，如果有什么需要通用的修改（关于Front-matter或者全文通用模板）可以直接修改该文件。</li><li>public：<code>hexo g</code>后生成的网站文件，该文件夹可以单独拿出来，当作网站部署的源码</li><li>.deploy_git：<code>hexo d</code>后生成的git部署文件，用于和github同步</li><li>_config.yml：核心文件，全局配置</li><li>_config.fluid.yml：核心文件，主题相关全局配置（我的主题名为fluid）</li><li>.npmignore/package.json/package-lock.json/db.json：其余配置文件</li></ul><p><img src="/2023/04/02/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%9C%A8GitHub%E4%B8%8A/image-20230403114238355.png" alt="项目文件组织"></p><h2 id="3-同步-amp-部署到Github-io"><a href="#3-同步-amp-部署到Github-io" class="headerlink" title="3. 同步&amp;部署到Github.io"></a>3. 同步&amp;部署到Github.io</h2><ul><li>初次使用：在github上建库，尾缀为.github.io</li><li>安装git部署插件：<code>npm install hexo-deployer-git --save</code></li><li>全局配置文件_config.yml配置如下：<ul><li>repo地址设置为ssh连接，因为之前设置了本地连github用的ssh密钥，这样比较稳定</li></ul></li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> git@github.com:CZX-Yui/CZX-Yui.github.io.git<br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><ul><li>部署站点：<code>hexo d</code> </li><li>刷新github可以看到已经被同步，再打开个人博客网站刷新即可更新（github部署较慢要等几分钟）</li></ul><blockquote><ul><li><a href="https://cloud.tencent.com/developer/article/1662782">Hexo博客教程（三）| Github、Coding 部署Hexo站点详解 - 腾讯云开发者社区</a></li></ul></blockquote><h1 id="二、新建博客流水线"><a href="#二、新建博客流水线" class="headerlink" title="二、新建博客流水线"></a>二、新建博客流水线</h1><ol><li><p>进入<strong>本地站点根目录</strong><code>D:\Documents\Github.io\MyBlog</code> ，在终端中打开</p></li><li><p>新建博客： <code>hexo new &lt;title&gt;</code> ，进入source-&gt;_posts，用Typora打开对应的md文件</p></li><li><p>愉快地编写markdown。</p><ol><li><p>设置index和banner图片，拷贝到source/images两个对应文件夹中。重命名尾部数字，更改到md文档的Front-matter部分的两个字段。</p></li><li><p>插入图片时：</p><ul><li><p>本地图片：可以直接copy进来</p></li><li><p>网络图片：复制图片链接，写一段插入图片地md语法</p></li></ul></li><li><p>记得编写文章头部的摘要，100字以内</p></li></ol></li><li><p>（可选）本地发布测试：在终端执行 <code>hexo clean ; hexo g ; hexo s</code></p></li><li><p>部署到GitHub上：在终端执行<code>hexo clean ; hexo d</code></p></li></ol><h1 id="三、其余细节问题"><a href="#三、其余细节问题" class="headerlink" title="三、其余细节问题"></a>三、其余细节问题</h1><h3 id="1-新建博客时命名注意"><a href="#1-新建博客时命名注意" class="headerlink" title="1. 新建博客时命名注意"></a>1. 新建博客时命名注意</h3><ul><li>不要出现“+”号，否则会自动识别为“-”号，造成后续导入图片时与默认“typora-root-url”命名不符合。尽量命名不要出现特殊符号</li></ul><h3 id="2-Typora图片插入"><a href="#2-Typora图片插入" class="headerlink" title="2. Typora图片插入"></a>2. Typora图片插入</h3><ul><li>本地插入图片时默认图片地址为“**/xxx.jpg**”，在官方<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>插件中存在bug，插件希望图片地址前面没有反斜杠“/”，因此不能识别到该地址出现bug。直接的解法是在每次插入图片后手动删掉反斜杠，但是太麻烦了。我尝试直接去node_modules源码里面修改，成功：hexo-renderer-marked/lib/<strong>renderer.js</strong>文件中，删掉下面标黄的部分，即允许文件名从“/”开头</li></ul><p><img src="/2023/04/02/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%9C%A8GitHub%E4%B8%8A/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84bug.png" alt="hexo插入图片的bug"></p><ul><li>图片中含有中文出错：在Typora偏好设置-&gt;图像，不要勾选插入时自动转译图像URL，否则会将中文转译成ASCII码，在Hexo插件转译路径时不匹配出错。</li><li>（TODO）图片进行缩放出错：缩放后默认格式变化，Hexo插件识别不了，这个暂时没有解决</li></ul><blockquote><ul><li><a href="https://hexo.io/zh-cn/docs/asset-folders#%E4%BD%BF%E7%94%A8-Markdown-%E5%B5%8C%E5%85%A5%E5%9B%BE%E7%89%87">资源文件夹 | Hexo</a></li><li>类似问题：<a href="https://github.com/hexojs/hexo-renderer-marked/issues/216">md img render part improvement of hexo-render-marked · Issue #216 · hexojs/hexo-renderer-marked (github.com)</a></li><li><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/">typora + hexo博客中插入图片 | yinyoupoet的博客</a></li></ul></blockquote><h3 id="3-部署github报错"><a href="#3-部署github报错" class="headerlink" title="3. 部署github报错"></a>3. 部署github报错</h3><ol><li><p>上传出错</p><ul><li><p>报错内容：<code>err: Error: Spawn failed</code></p></li><li><p>解决方法：将原来的部署配置改成ssh连接</p></li></ul></li></ol><blockquote><ul><li><a href="https://blog.csdn.net/weixin_41256398/article/details/117994899">Hexo部署出现错误err: Error: Spawn failed解决方式</a></li><li><a href="https://github.com/hexojs/hexo-deployer-git">hexojs/hexo-deployer-git: Git deployer plugin for Hexo. (github.com)</a></li></ul></blockquote><ol start="2"><li><p>部署出错</p><ul><li>通过F12排查问题，CSS文件问题，文件路径的问题</li><li>在站点根目录的_config.yml文件中加入一行：<code>root: /</code></li></ul></li></ol><blockquote><p><a href="https://blog.csdn.net/StarryaSky/article/details/83378011">hexo+Github搭建博客，能访问但无法加载css文件_StarryaSky的博客-CSDN博客</a></p></blockquote><h3 id="4-设置帖子的摘要并限制字数"><a href="#4-设置帖子的摘要并限制字数" class="headerlink" title="4. 设置帖子的摘要并限制字数"></a>4. 设置帖子的摘要并限制字数</h3><ul><li><p>Hexo官方文档建议在Front-matter处添加字段“excerpt”，并在其后添加摘要描述，这种方法不太优雅不够灵活。</p></li><li><p>Hexo官方还提供了一种<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD">配置</a>，在文章开头使用 <code>&lt;!-- more --&gt;</code>，那么 <code>&lt;!-- more --&gt;</code> 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。测试发现大概可以写100个字以内能完全展示。</p></li><li><p>这部分已经内置到post.md中，以后直接copy即可</p></li></ul><h3 id="5-每个帖子背景图片配置"><a href="#5-每个帖子背景图片配置" class="headerlink" title="5. 每个帖子背景图片配置"></a>5. 每个帖子背景图片配置</h3><ul><li><p>参考<a href="https://hexo.fluid-dev.com/docs/guide/#%E6%96%87%E7%AB%A0%E5%9C%A8%E9%A6%96%E9%A1%B5%E7%9A%84%E5%B0%81%E9%9D%A2%E5%9B%BE">Fluid文档关于文章页</a>的描述，可以在md文章Front-matter处添加字段<code>index_img</code>显示文章在首页的小图和<code>banner_img</code>显示文章在详情页的背景大图。</p></li><li><p>如果不指定这两个值，会采用_config.fluid.yml中配置的默认值</p></li><li><p>配置路径标准：不一定要绑定每一篇文章，可以随机一些。全部放在source/images下，分别建立两个文件夹，一个存index图片，一个存banner图片。图片命名以数字结尾。图片格式为png。在post.md模板中定义为：(注意图片名称x替换为数字)</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">index_img: <span class="hljs-regexp">/images/i</span>ndex_img/index_img_x.png<br>banner_img: <span class="hljs-regexp">/images/</span>banner_img/banner_img_x.png<br></code></pre></td></tr></table></figure></li></ul><h3 id="6-hexo-new-page的作用是什么？"><a href="#6-hexo-new-page的作用是什么？" class="headerlink" title="6. hexo new page的作用是什么？"></a>6. hexo new page的作用是什么？</h3><p>TODO。。。</p><h3 id="7-增加文章在线编辑功能"><a href="#7-增加文章在线编辑功能" class="headerlink" title="7. 增加文章在线编辑功能"></a>7. 增加文章在线编辑功能</h3><blockquote><p><a href="https://blog.csdn.net/qq_51725966/article/details/128152299">Hexo 自动化部署在线编辑文章</a></p></blockquote><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><h4 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h4><ul><li><p><a href="https://pages.github.com/">GitHub Pages</a></p></li><li><p><a href="https://hexo.io/zh-cn/">Hexo</a></p></li><li><p><a href="https://hexo.fluid-dev.com/docs/">Fluid</a></p></li></ul><h4 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h4><ul><li><p>灵活配置好md文章中Front-matter的部分，这是每篇文章将如何在页面中展示的“控制台”。以及_config.yml文件，这是全局样式配置的“控制台”。</p></li><li><p>搭建过程中遇到问题主要还是参考官方文档的说明，相比于到处找帖子而且说的都不一样，官方文档会及时更新，有啥bug都会及时修正。因为这个框架也算是各个玩家们的作品，少有盈利组织在专门运维，有点bug很正常。</p></li><li><p>常常遇到本地建站测试没问题，一部署到github就会出现问题，这时开源打开F12debug，一般是链接出错。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>web_dev</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/02/hello-world/"/>
    <url>/2023/04/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
